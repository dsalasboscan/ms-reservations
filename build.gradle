plugins {
	id("org.springframework.boot") version "2.3.1.RELEASE"
	id("io.spring.dependency-management") version "1.0.9.RELEASE"
	id("java")
	id("groovy")
	id("jacoco")
}

def app = [
		group      : 'com.davidsalas',
		name       : 'ms-reservations',
		version    : '1.0.0',
		versionType: 'RELEASE'
]

group = app.group
version = app.version
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = "0.8.5"
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
		xml.destination file("${buildDir}/jacoco/jacoco.xml")
		html.destination file("${buildDir}/jacoco/jacoco.html")
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ["*com/davidsalas/reservations/model*", "*com/davidsalas/reservations/util/ErrorMessageConstants"])
		}))
	}
}


ext['groovyVersion'] = '2.5.7'
ext['springCloudVersion'] = 'Hoxton.RELEASE'
ext['testContainersVersion'] = '1.15.1'
ext['spockVersion'] = '1.3-groovy-2.5'

dependencies {
	/* Spring dependencies  */
	implementation("org.springframework.boot:spring-boot-starter")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	testImplementation("org.springframework.boot:spring-boot-starter-test")

	/* Swagger dependencies  */
	implementation("io.springfox:springfox-swagger2:2.9.2")
	implementation("io.springfox:springfox-swagger-ui:2.9.2")

	/* Lombok dependencies  */
	compileOnly("org.projectlombok:lombok:1.18.16")
	annotationProcessor("org.projectlombok:lombok:1.18.16")

	/* Persistence dependencies */
	runtimeOnly("com.microsoft.sqlserver:mssql-jdbc")

	/* Spock + Groovy dependencies */
	testImplementation("org.codehaus.groovy:groovy-all:${groovyVersion}")
	testImplementation("org.spockframework:spock-core:${spockVersion}")
	testImplementation("org.spockframework:spock-spring:${spockVersion}")

	/* TestContainers */
	testImplementation("org.testcontainers:spock:${testContainersVersion}")
	testImplementation("org.testcontainers:mssqlserver:${testContainersVersion}")
}

dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
	}
}

test {
	useJUnitPlatform()

	include '**/*Spec.*'
	include '**/*Test.*'

	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
	finalizedBy jacocoTestReport

	testLogging {
		exceptionFormat = 'full'
		events "PASSED", "FAILED", "SKIPPED"
	}

}

bootJar {
	archiveFileName = "${app.name}-${app.version}-${app.versionType}.jar"
}